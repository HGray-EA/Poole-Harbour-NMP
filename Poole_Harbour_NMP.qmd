---
title: "Poole Harbour Nutrient Monitoring Report"
format:
  html:
    theme: flatly
    toc: true
    toc-location: right
    toc-depth: 3
    number-sections: true
    code-fold: false
    code-tools: false
    fig-cap: true
    title-block-banner: true
---

```{r quarto setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE, cache=TRUE)
#| warning: false
#| echo: false
```

### Introduction

The Environment Agency monitor at 5 locations in Poole Harbour, monitoring is undertaken at five sites (currently under the National Surveillance program) as well as in Poole Harbour Rivers catchment (see below for monitoring sites). Monitoring at Poole Harbour 4 (Poole Bridge) by Poole Harbour Old Town has been dropped by national monitoring programme at the EA from this year but Wessex area team have requested that nutrient monitoring is continued at this site under a local driver.

With regard to macroalgae, we carry out opportunistic macroalgae surveys every three years (next due in 2026). 

### Monitoring Sites Map

```{r, monitoring sites map}
# Monitoring in Poole Harbour
library(sf)

# Load in WIMS for CAT
source("WIMS_Transform_Script.R")
source("Catch_Set_Up.R")

# Load your data
CDE <- read.csv("/dbfs/mnt/lab/unrestricted/harry.gray@environment-agency.gov.uk/CEP/WFD_Wessex_2024.csv")

CDE %<>% 
  filter(Operational.Catchment == unique(CAT$OPCAT_NAME)[1]) %>% 
  inner_join(CAT_geo, ., by = c("WB_ID" = "Water.Body.ID"))


```

------------------------------------------------------------------------------

```{r}
# Get monitoring sites from the Harbour

startDate="2015-01-01"
endDate="2025-02-03"

param.units="mg/l"

det="9943" #	Nitrogen, Total Oxidised as N
#read water quality data from online WQ archive
wd<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?area=6-28&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)

TraC.dat <- wd %>% mutate(
               easting = as.numeric(sample.samplingPoint.easting),
               northing = as.numeric(sample.samplingPoint.northing),
              Date = as.Date(sample.sampleDateTime)
                ) %>% 
              st_as_sf(coords= c("easting","northing"), crs=27700) %>% 
              st_transform(4326) %>% 
             filter(Date > "2020-01-01") %>% 
             group_by(sample.samplingPoint.notation) %>% 
             mutate(
              Mean_N = round(mean(result),2),
              Mean_Count = n()
              ) %>% 
             ungroup()

det = "0116" # 	Nitrogen, Total Oxidised as N
wd.land<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?area=6-28&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=999999"),stringsAsFactors=FALSE)

Riv.dat<-wd.land %>% mutate(
               easting = as.numeric(sample.samplingPoint.easting),
               northing = as.numeric(sample.samplingPoint.northing),
               Date = as.Date(sample.sampleDateTime)
                ) %>% 
              st_as_sf(coords= c("easting","northing"), crs=27700) %>% 
              st_transform(4326) %>% 
             filter(Date > "2020-01-01") %>% 
             group_by(sample.samplingPoint.notation) %>% 
             mutate(
              Mean_N = round(mean(result),2),
              Mean_Count = n()
              ) %>% 
             ungroup()

Riv.dat <- Riv.dat[CAT,]

library(leaflet.extras)

# Define log-scaled bins for numeric data
binz <-c(0,0.2,0.5,1,5,10,15,Inf)

# Create a color palette using colorBin for numeric data
pal_p <- colorBin(palette = "inferno", domain = Riv.dat$result, bins = binz, reverse=TRUE )


leaflet() %>%
  addProviderTiles(providers$Esri, group = "Esri Basemap") %>%
  addPolygons(
    data = CAT_Union,
    fillOpacity = 0.0001,
    fillColor = NA,
    color = "black",
    weight = 3,
    options = pathOptions(zIndex = 600)
  ) %>%
  addPolygons(
    data = CAT,
    fillOpacity = 0.0001,
    fillColor = NA,
    color = "black",
    weight = 3,
    highlightOptions = highlightOptions(
      color = "white",
      weight = 4,
      bringToFront = FALSE
    ),
    options = pathOptions(zIndex = 600),
    group = "Waterbodies"
  ) %>%
  addPolylines(
    data = DRN,
    col = "#2832C2",
    weight = 1,
    opacity = 0.5,
    options = pathOptions(zIndex = 600)
  ) %>%
  addCircleMarkers(
    data = Riv.dat,
    radius = 10,
    color = "black",
    weight = 1,
    fillColor = ~pal_p(Mean_N),
    fillOpacity = 1,
    popup = ~paste0(
      "Site: ", Riv.dat$sample.samplingPoint.label, "<br> Mean N (mg/L): ", Riv.dat$Mean_N, 
      "<br> Sample Count: ", Riv.dat$Mean_Count,
      "<br> from/to: ", min(Riv.dat$Date), " / ", max(Riv.dat$Date)
    ),
    options = pathOptions(zIndex = 999),
    group = "PO4-P"
  ) %>%
    addLegend(
    "bottomleft",
    pal = pal_p,
    values = binz,
    title = "Mean N 2015-2025",
    group = "PO4-P"
  ) %>%
  addScaleBar() %>%
  addLayersControl(
    overlayGroups = c("Waterbodies"),
    position = "topright",
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  htmlwidgets::onRender(Layers_JS) %>%
  hideGroup("Waterbodies")

```

-----------------------------------------------------------------------------

```{r TraC Map}

# Define log-scaled bins for numeric data
bins <-c(0,0.02,0.05,0.1,0.5,1,2,Inf)

# Create a color palette using colorBin for numeric data
pal_p <- colorBin(palette = "magma", domain = TraC.dat$result, bins = bins, reverse=TRUE )

leaflet() %>%
  setView("-2.0063083662813836","50.68760858102863",  zoom =12) %>% 
  addProviderTiles(providers$Esri, group = "Esri Basemap") %>%
  addPolygons(
    data = CAT_Union,
    fillOpacity = 0.0001,
    fillColor = NA,
    color = "black",
    weight = 3,
    options = pathOptions(zIndex = 600)
  ) %>%
  addPolygons(
    data = CAT,
    fillOpacity = 0.0001,
    fillColor = NA,
    color = "black",
    weight = 3,
    highlightOptions = highlightOptions(
      color = "white",
      weight = 4,
      bringToFront = FALSE
    ),
    options = pathOptions(zIndex = 600),
    group = "Waterbodies"
  ) %>%
  addPolylines(
    data = DRN,
    col = "#2832C2",
    weight = 1,
    opacity = 0.5,
    options = pathOptions(zIndex = 600)
  ) %>%
  addCircleMarkers(
    data= TraC.dat,
    radius = 10,
    color = "black",
    weight = 1,
    fillColor = ~pal_p(Mean_N),
    fillOpacity = 1,
     popup = ~paste0(
      "Site: ", TraC.dat$sample.samplingPoint.label, "<br> Mean N (mg/L): ", TraC.dat$Mean_N, 
      "<br> Sample Count: ", TraC.dat$Mean_Count,
      "<br> from/to: ", min(TraC.dat$Date), " / ", max(TraC.dat$Date)
    ),
    options = pathOptions(zIndex = 999),
    group = "PO4-P"
  ) %>%
  addLegend(
    "bottomleft",
    pal = pal_p,
    values = binz,
    title = "Mean N Tot 2015-2025",
    group = "PO4-P"
  ) %>%
  addScaleBar() %>%
  addLayersControl(
    overlayGroups = c("Waterbodies"),
    position = "topright",
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  htmlwidgets::onRender(Layers_JS) %>%
  hideGroup("Waterbodies")
```
-----------------------------------------------------------------------------------------------------------------------
```{r, Overview of monitoring histograms}

TraC.dat = TraC.dat[CAT,]
### 

#Trac.dat_20_22 <- TraC.dat %>% filter(Date <2020-01-01)


Trac.dat_22_25 <- TraC.dat %>% filter(Date >2022-01-01)

# Violin plot
   #         v1 <- ggplot(Trac.dat_20_22 , aes(x = sample.samplingPoint.label, y #= result)) +
#              # geom_violin(aes(fill = sample.samplingPoint.label), color = #"black", alpha = 0.5) +  # Violin plot with some transparency
#              geom_boxplot(width = 0.05, color = "black", aes(fill = #sample.samplingPoint.label), alpha = 0.7) +  # Boxplot on top
#              geom_text(aes(x = sample.samplingPoint.label, y = -Inf, label = #paste("Count: ", Mean_Count)), vjust = -0.5, hjust = 0.5, size = 4) +  # Add #counts below the x-axis if available
#              labs(title = "2020-2025 Total N Distribution by Site", x = #"Site", y = "Total Nitrogen as N (mg/L)") +
#              #scale_y_continuous(limits = c(0,20), breaks = #c(0,0.1,0.2,0.3,0.5,1)) + 
#            #  geom_hline(yintercept = 0.3, col = "red")+ # this is wfd poor
#            #  geom_hline(yintercept = 0.1, col = "green")+# this is wfd good
#              theme_minimal() +  # Use a minimal theme for a cleaner look
#              theme(legend.position = "none", axis.text.x = #element_text(angle=45, size=9)) +
#              labs(caption = "Total Nitrogen as N 2015-2020")+
#              coord_flip()
#
v2 <- ggplot(Trac.dat_22_25, aes(x = sample.samplingPoint.label, y = result)) +
  # geom_violin(aes(fill = sample.samplingPoint.label), color = "black", alpha = 0.5) +  # Violin plot with some transparency
  geom_boxplot(width = 0.05, color = "black", aes(fill = sample.samplingPoint.label), alpha = 0.7) +  # Boxplot on top
  geom_text(aes(x = sample.samplingPoint.label, y = -Inf, label = paste("Count: ", Mean_Count)), vjust = -0.5, hjust = 0.5, size = 4) +  # Add counts below the x-axis if available
  labs(title = "2020-2025 Total N Distribution by Site", x = "Site", y = "Total Nitrogen as N (mg/L)") +
  #scale_y_continuous(limits = c(0,20), breaks = c(0,0.1,0.2,0.3,0.5,1)) + 
#  geom_hline(yintercept = 0.3, col = "red")+ # this is wfd poor
#  geom_hline(yintercept = 0.1, col = "green")+# this is wfd good
  theme_minimal() +  # Use a minimal theme for a cleaner look
  theme(legend.position = "none", axis.text.x = element_text(angle=45, size=9)) +
  labs(caption = "Total Nitrogen as N 2020-2025")+
  coord_flip()

#a <- ggplot(WIMS_p, aes(x= WB_NAME, y=result, col=result))+
#  geom_point()+theme(axis.text.x = element_text(angle=90, size=5))+labs(y= "Orthophosphate (mg/L)", x= "Waterbodies")



plotly::ggplotly(v2)  %>%
  plotly::layout(
    annotations = list(
      x = 0.5,  # Horizontal center
      y = -5,  # Position below the plot
      text = "Total Nitrogen as N 2022-2025",
      showarrow = FALSE,
      xref = "paper",
      yref = "paper",
      font = list(size = 12)  # Adjust the font size if needed
    )
  )

```

### Feshwater Nitrogen & Phosphate Trends

Nutrients are mapped for the four main feeder rivers to the Harbour: the Frome, Piddle, Sherford and Corfe. The river Frome has the largest discharge and drains an area approximatley 3 times that of the Piddle.

In the Frome at Holme Bridge we see no change in either Orthophosphate or Nitrogen Total, however, over a longer time span, we see a decrease in Orthophosphate since 2000 whilst Nitrogen Total remains the same.

```{r Frome}

library(MetBrewer)
library(mgcv) 
library(cowplot)

wqsite<-"SW-50590127"

startDate="2015-01-01"
endDate="2025-02-03"

param.units="mg/l"

det="0118"#OrthoP #0116

#read water quality data from online WQ archive
FR.O.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date) 

#  gam_PO <- gam(Result ~ s(as.numeric(Date), bs = "cs"), data = FR.O.wq.data)

  #Predict
 #     future_dates$Predicted_Result <- predict(gam_PO, newdata = future_dates, type = "response")
  

FA <- ggplot(FR.O.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#c24f00") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
 # ylim(c(0,0.06))+
#  geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
  labs(title = "Frome, Orthophosphate",
       x = "Date",
       y = "Orthophosphate (mg/L)")+
  theme_bw()


det="0116"#OrthoP #0116

#read water quality data from online WQ archive
FR.TotN.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date) 

# GAM for Nitrogen

#gam_FN <- gam(Result ~ s(as.numeric(Date), bs = "cs"), data = FR.TotN.wq.data)


#future_dates <- data.frame(Date = seq(as.Date("2025-02-04"), as.Date("2030-12-31"), by = "month"))

#Predict
#future_dates$Predicted_Result <- predict(gam_FN, newdata = future_dates, type = "response")

FB <- ggplot(FR.TotN.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#0073C2FF") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
  ylim(c(0,8))+
 # geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
  labs(title = "Frome, Total Nitrogen as N",
       x = "Date",
       y = "Tot N (mg/L)")+
  theme_bw()

plot_grid(FA,FB)

```

In the Piddle we see a reduction in Orthophosphate and no change in Nitrogen over the last 10 years. Since 2000, we see the same story as the Frome, although Orthophosphate has only since the last 5 years met the levels of reduced Orthophosphate as the Frome.

```{r Piddle}
wqsite<-"SW-50450129"

startDate="2015-01-01"
endDate="2025-02-03"

param.units="mg/l"


det="0118"#OrthoP #0116

#read water quality data from online WQ archive
P.O.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date) 

#  gam_PO <- gam(Result ~ s(as.numeric(Date), bs = "cs"), data = P.O.wq.data)

  #Predict
 #     future_dates$Predicted_Result <- predict(gam_PO, newdata = future_dates, type = "response")
  

A <- ggplot(P.O.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#c24f00") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
  ylim(c(0,0.06))+
#  geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
  labs(title = "Piddle, Orthophosphate",
       x = "Date",
       y = "Orthophosphate (mg/L)")+
  theme_bw()


det="0116"#OrthoP #0116

#read water quality data from online WQ archive
P.TotN.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date) 

# GAM for Nitrogen

#gam_PN <- gam(Result ~ s(as.numeric(Date), bs = "cs"), data = P.TotN.wq.data)


#future_dates <- data.frame(Date = seq(as.Date("2025-02-04"), as.Date("2030-12-31"), by = "month"))

##Predict
#future_dates$Predicted_Result <- predict(gam_FN, newdata = future_dates, type = "response")

B <- ggplot(P.TotN.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#0073C2FF") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
  ylim(c(0,8))+
 # geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
  labs(title = "Piddle, Total Nitrogen as N",
       x = "Date",
       y = "Tot N (mg/L)")+
  theme_bw()

plot_grid(A, B) #labels = c("OrthoP", "Tot N"))



```

In the river Sherford, we see a decrease in both Orthophosphate and Total Nitrogen since 2000. Total Nitrogen occurs at similar concentrations to the Frome and Piddle and flat lines if the timeseries is clipped to 2015-2025.

```{r Sherford}
wqsite<-"SW-50951010"

startDate="2015-01-01"
endDate="2025-02-03"

param.units="mg/l"

det="0118"#OrthoP #0116

#read water quality data from online WQ archive
Sher.O.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date)

det="0116"#OrthoP #0116

#read water quality data from online WQ archive
Sher.N.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date)

Sher_OP <- ggplot(Sher.O.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#c24f00") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
  ylim(c(0,0.06))+
#  geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
  labs(title = "Sherford, Orthophosphate",
       x = "Date",
       y = "Orthophosphate (mg/L)")+
  theme_bw()

Sher_N <- ggplot(Sher.N.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#0073C2FF") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
  ylim(c(0,8))+
 # geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
    labs(title = "Sherford, Total Nitrogen as N",
       x = "Date",
       y = "Tot N (mg/L)")+
  theme_bw()


plot_grid(Sher_OP, Sher_N)

```

For the Corfe river at monitoring point Corfe D/S Corfe STW tells the same story as the river Sherford, with a decrease in both Orthophosphate and Total Nitrogen since 2000. Unlike other rivers which feed Poole Harbour, Corfe river continues to show this decrease in both determinants, albeit modest from 2015-2025. It records the lowest levels of Orthophosphate of tributaries to Poole Harbour, but is the smallest tributary by drainage volume.

```{r Corfe}

wqsite<-"SW-50900712"

startDate="2015-01-01"
endDate="2025-02-03"

param.units="mg/l"

det="0118"#OrthoP #0116

#read water quality data from online WQ archive
C.O.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date)

 # gam_PO <- gam(Result ~ s(as.numeric(Date), bs = "cs"), data = P.O.wq.data)

  #Predict
  #    future_dates$Predicted_Result <- predict(gam_PO, newdata = future_dates, type = "response")
  

CO <- ggplot(C.O.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#c24f00") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
  ylim(c(0,0.06))+
#  geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
  labs(title = "Corfe, Orthophosphate",
       x = "Date",
       y = "Orthophosphate (mg/L)")+
  theme_bw()

det="0116"#OrthoP #0116

#read water quality data from online WQ archive
C.TotN.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date) 
# GAM for Nitrogen

#gam_PN <- gam(Result ~ s(as.numeric(Date), bs = "cs"), data = P.TotN.wq.data)
#future_dates <- data.frame(Date = seq(as.Date("2025-02-04"), as.Date("2030-12-31"), by = "month"))

#Predict
#future_dates$Predicted_Result <- predict(gam_FN, newdata = future_dates, type = "response")

CN <- ggplot(C.TotN.wq.data, aes(x = Date, y = Result)) +
  geom_point(alpha = 0.2, col = "#0073C2FF") +
  geom_rug(sides = "l", alpha = 0.2) +  
  stat_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, col="seagreen")+
  ylim(c(0,8))+
 # geom_line(data = future_dates, aes(x = Date, y = Predicted_Result), col = "darkred", alpha = 0.8, linetype = #"dashed") +
  labs(title = "Corfe, Total Nitrogen as N",
       x = "Date",
       y = "Tot N (mg/L)")+
  theme_bw()

plot_grid(CO, CN) #labels = c("OrthoP", "Tot N"))


```

```{r, Poole Harbour 3 Hutchins Buoy}

wqsite<-"SW-50950249"

startDate="2000-01-01"
endDate="2025-02-03"

param.units="mg/l"


det="9856"#OrthoP #0116

#read water quality data from online WQ archive
PH3.O.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date)

det="9943"#OrthoP #0116

#read water quality data from online WQ archive
PH3.N.wq.data<-read.csv(paste0("https://environment.data.gov.uk/water-quality/data/measurement.csv?samplingPoint=",wqsite,"&determinand=",det,"&startDate=",startDate,"&endDate=",endDate,"&_limit=99999"),stringsAsFactors=FALSE)%>%
  mutate(date.time=ymd_hms(sample.sampleDateTime,tz="Europe/London"))%>%
  mutate(Date=date(date.time))%>%
  rename(Result=result)%>%
  rename(Remark=resultQualifier.notation)%>%
  select(Date,Remark,Result)%>%
  group_by(Date,Remark)%>%
  summarise(Result=mean(Result))%>%
  arrange(Date)

PH3_OP <- ggplot(PH3.O.wq.data, aes(Date, Result)) +
  geom_point(aes(color = Result)) +
  scale_x_date(limits = as.Date(c("2015-01-01", "2025-02-03"))) +
  scale_y_continuous(limits = c(0, 0.05)) +
  scale_color_gradientn(colors = met.brewer("Derain", direction = -1)) +
  geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), colour = "red") +
  labs(title = "Orthophosphate, Poole Harbour 3",
       x = "Date", y = "Result (mg/l)") +
  theme_bw()


PH3_N <- ggplot(PH3.N.wq.data, aes(Date, Result)) +
  geom_point(aes(color = Result)) +
  scale_x_date(limits = as.Date(c("2000-01-01", "2025-02-03"))) +
 scale_y_continuous(limits = c(2.5, 10)) +
  scale_color_gradientn(colors = met.brewer("Derain", direction = -1)) +
  geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), colour = "red") +
  labs(title = "Total N Oxidised, Poole Harbour 3",
       x = "Date", y = "Result (mg/l)") +
  theme_bw()

plot_grid(PH3_OP, PH3_N)
```
